<h1>JSON API index</h1>
<h2>Users</h2>

<pre><code class="go">type User struct {
	ID       int64  `json:"id" gorm:"primary_key:yes"`
	Name     string `json:"name" form:"name"`
	Password string `json:"password,omitempty" form:"password" sql:"-"`
	Recovery string `json:"-"`
	Digest   []byte `json:"-"`
	Email    string `json:"email,omitempty" form:"email" binding:"required" sql:"unique"`
	Posts    []Post `json:"posts"`
}
</code></pre>

<h3><a href="/api/users">GET /api/users</a></h3>
<p>Displays all users and their data</p>

<h3>GET /api/user/:id</h3>
<p>Displays data of a single user.</p>

<h3>POST /api/user</h3>
<p>Creates a new user. Required parameters are email and password.</p>

<pre><code class="json">{
	"name": "Juuso",
	"password": "foo",
	"email": "foo@example.com"
}
</code></pre>

<h3>POST /api/user/login</h3>
<p>Logins a user and if successful, returns session cookie. Required parameters are email and password.</p>

<pre><code class="json">{
	"email": "foo@example.com",
	"password": "foo",
}
</code></pre>

<h3>GET /api/user/logout</h3>
<p>Logs out and deletes the current session.</p>

<hr>

<h2>Posts</h2>

<pre><code class="go">type Post struct {
	ID        int64  `json:"id" gorm:"primary_key:yes"`
	Title     string `json:"title" form:"title" binding:"required"`
	Content   string `json:"content" form:"content" sql:"type:text"`
	Markdown  string `json:"markdown" form:"markdown" sql:"type:text"`
	Date      int64  `json:"date"`
	Slug      string `json:"slug"`
	Author    int64  `json:"author"`
	Excerpt   string `json:"excerpt"`
	Viewcount uint   `json:"viewcount"`
	Published bool   `json:"-"`
}
</code></pre>

<h3><a href="/api/posts">GET /api/posts</a></h3>
<p>Displays all posts</p>

<h3>GET /api/post/:slug</h3>
<p>Displays a single post</p>

<h3>POST /api/post</h3>
<p>Creates a new post. Requires active session. Example payload:</p>

<pre><code class="json">{
	"title": "My first post",
	"content": "This is my first post!"
}
</code></pre>

<h3>GET /api/post/:slug/publish</h3>
<p>Publishes a post. Requires active session. Requires post slug as parameter.</p>

<h3>POST /api/post/:slug/edit</h3>
<p>Updates a post. Requires active session. Required parameters are slug, content and title.</p>

<pre><code class="json">{
	"slug": "my-first-post",
	"title": "My first post edited",
	"content": "This is my first post, edited."
}
</code></pre>

<h3>GET /api/post/:slug/delete</h3>
<p>Deletes a post. Requires active session. Requires post slug as parameter.</p>

<hr>

<h2>Search</h2>

<pre><code class="go">type Search struct {
	Query string `json:"query" form:"query" binding:"required"`
	Score float64
	Posts []Post
}
</code></pre>

<h3>POST /api/post/search</h3>
<p>Uses site's search to find posts with given query. Example payload:</p>

<pre><code class="json">{
	"query": "first"
}
</code></pre>

<hr>

<h2>Settings</h2>

<pre><code class="go">type Vertigo struct {
	Name               string          `json:"name" form:"name" binding:"required"`
	Hostname           string          `json:"hostname" form:"hostname" binding:"required"`
	Firstrun           bool            `json:"firstrun,omitempty"`
	CookieHash         string          `json:"cookiehash,omitempty"`
	AllowRegistrations bool            `json:"allowregistrations" form:"allowregistrations"`
	Markdown           bool            `json:"markdown" form:"markdown"`
	Description        string          `json:"description" form:"description" binding:"required"`
	Mailer             MailgunSettings `json:"mailgun"`
}
</code></pre>

<h3><a href="/api/settings">GET /api/settings</a></h3>
<p>Displays settings given in installation wizard. Requires active session cookie.</p>

<h3>POST /api/settings</h3>
<p>Updates the settings with given data. Requires active session cookie.</p>

<pre><code class="json">{
	"hostname": "example.com",
	"name": "Foo Blog",
	"description": "Foo's test blog",
	"mailgun": {
		"mgdomain": "foo",
		"mgprikey": "foo"
	}
}
</code></pre>